volumes:
  rentms_data:
networks:
  rentms_net:

services:
  postgres:
    networks:
      - rentms_net
    image: postgres
    volumes:
      - rentms_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      # test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: on-failure
  
  frontend:
    networks:
      - rentms_net
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: build-stage
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    ports:
      - "3030:3030"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - ./frontend:/app
    command: npm run serve -- --port 3030
    
  # api:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - rentms_net
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - ./backend:/src
  #   restart: on-failure